---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const tags = new Set(
  posts
    .map((post) => post.data.tags)
    .filter((tag) => tag !== undefined)
    .flat()
);
---

<!doctype html>
<html lang="ko">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main {
        width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
        min-height: calc(100vh - 140px);
      }

      .content-wrapper {
        padding: 1rem 0;
      }

      ul {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }

      ul li {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        transition: all 0.3s ease;
        border: 1px solid rgb(var(--gray-light));
      }

      ul li:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
      }

      ul li * {
        text-decoration: none;
        transition: 0.2s ease;
      }

      ul li img {
        margin-bottom: 1rem;
        border-radius: 12px;
        width: 100%;
        height: 200px;
        object-fit: cover;
      }

      ul li a {
        display: block;
      }

      .post-content {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
      }

      .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1.4;
        font-size: 1.5rem;
        font-weight: 600;
      }

      .date {
        margin: 0;
        color: rgb(var(--gray));
        font-size: 0.9rem;
        opacity: 0.8;
      }

      ul li a:hover .title {
        color: rgb(var(--accent));
      }

      .tag-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: rgb(var(--gray-light), 0.3);
        border-radius: 12px;
        justify-content: flex-start;
      }

      .tag-button {
        padding: 0.6rem 1.2rem;
        border-radius: 20px;
        background-color: white;
        color: rgb(var(--gray-dark));
        border: 1px solid rgb(var(--gray-light));
        font-size: 0.85rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
      }

      .tag-button:hover {
        background-color: rgb(var(--gray-dark), 0.08);
        color: rgb(var(--black));
        border-color: rgb(var(--gray-dark), 0.2);
        transform: translateY(-1px);
      }

      .post-tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-top: 0.5rem;
      }

      .post-tag {
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        background-color: rgb(var(--gray-light), 0.5);
        color: rgb(var(--gray-dark));
        font-size: 0.75rem;
        font-weight: 500;
      }

      @media (min-width: 768px) {
        ul {
          grid-template-columns: repeat(3, 1fr);
          gap: 1.5rem;
        }

        .title {
          font-size: 1.3rem;
        }
      }

      @media (max-width: 720px) {
        main {
          padding: 1rem 0.5rem;
        }

        .tag-container {
          padding: 1rem;
          margin-bottom: 1.5rem;
        }

        .tag-button {
          padding: 0.5rem 1rem;
          font-size: 0.8rem;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class="content-wrapper">
        <div class="tag-container">
          {
            Array.from(tags).map((tag) => (
              <button class="tag-button">{tag}</button>
            ))
          }
        </div>
        <ul>
          {
            posts.map((post) => (
              <li>
                <a href={`/${post.id}/`}>
                  {post.data.heroImage && (
                    <Image
                      width={720}
                      height={200}
                      src={post.data.heroImage}
                      alt=""
                    />
                  )}
                  <div class="post-content">
                    <h4 class="title">{post.data.title}</h4>
                    <p class="date">
                      <FormattedDate date={post.data.pubDate} />
                    </p>
                    {post.data.tags && post.data.tags.length > 0 && (
                      <div class="post-tags">
                        {post.data.tags.map((tag) => (
                          <span class="post-tag">{tag}</span>
                        ))}
                      </div>
                    )}
                  </div>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
    <Footer />
  </body>
</html>
